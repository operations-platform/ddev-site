#
# deploy.yml
# Use this workflow to deploy fixed environments (live,dev,test)
#
name: Deploy to Live
on:
  # Allows running deploy task manually.
  workflow_dispatch:

  # Only act on pushes to main branch
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to ${{matrix}}

    # Use a matrix for deploying multiple sites.
    strategy:
      matrix:
        include:

          - name: live
            path: "Sites/${{ github.repository }}/live"
            domains: "live.mysite.com,www.mysite.com"
            git_reference: "main"

          - name: dev
            path: "Sites/${{ github.repository }}/dev"
            domains: "dev.mysite.com"
            git_reference: "main"

    # Send a link to GitHub's Deployment API to show to users on GitHub.com.
    environment:
      name: mysite.${{ matrix.name }}
      url: http://${{ matrix.name }}.mysite.com

    # The label of the runner you wish to use.
    # Operations Site Runner automatically adds the server's hostname as a label.
    # Use the hostname label to be sure the workflow runs on the right server.
    runs-on: prod.myserver.com

    steps:

      # Runs site-server-ddev GitHub Action.
      # See https://github.com/operations-platform/site-server-ddev
      - name: Deploy site
        uses: operations-platform/site-server-ddev@main
        with:
          # For continuous delivery, set to a branch. Merges to the branch will trigger deployment.
          # For manual delivery, you can set this to a tag.
          git-reference: ${{ matrix.git_reference }}

          # The path to install the site, relative to $HOME
          path: ${{ matrix.path }}

          # Set to "yes" to run the "sync-command". THIS WILL DESTROY THE SITE DATA.
          # Leave out for sites that should not sync.
          sync: "yes"

          # Whether or not to run "ddev start". There may be downtime.
          ddev-start: "yes"

          # The DDEV project name to use for this environment. Must be unique on this server.
          ddev-project-name: "mysite.${{ matrix.name }}"

          # SSH Settings.
          # Add to your repository secrets.
          # Only needed if this site needs to sync from a remote server.

          # Value of ~/.ssh/known_hosts.
          # Command to get SSH_KNOWN_HOSTS:
          # ssh-keyscan -H yourliveserver.com -H github.com
          ssh-known-hosts: ${{ secrets.SSH_KNOWN_HOSTS }}

          # A private key that can access the live site for syncing.
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

          # A list of domains to apply to this environment. (Must be a string that parses as a yaml array because github actions inputs must be strings)
          ddev-fqdns: ${{ matrix.domains }}
